generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  code     String  @id
  name     String
  credits  Int
  deps     Json
  program  String
  school   String
  area     String?
  category String?
}

model CurriculumBlock {
  id   String @id @default(cuid())
  kind String
  name String
  req  Json
}

model Plan {
  id            String   @id @default(cuid())
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  name          String
  user_rut      String
  semesters     PlanSemester[]
  next_semester Int
  level         Int?
  school        String?
  program       String?
  career        String?
}

model PlanSemester {
  id      String @id @default(cuid())
  plan    Plan @relation(fields: [plan_id], references: [id], onDelete: Cascade)
  plan_id String
  number  Int
  classes PlanClass[]
}

// TODO: cache class_codes? there could be too much avoidable repetition
model PlanClass {
  id          String @id @default(cuid())
  semester    PlanSemester @relation(fields: [semester_id], references: [id], onDelete: Cascade)
  semester_id String
  class_code  String
}
